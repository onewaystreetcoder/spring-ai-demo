{"instruction": "CREATE TABLE sys_config (  id int COMMENT 主键,  name text COMMENT 名称,  code text COMMENT 编码,  value text COMMENT 值,  sys_flag text COMMENT 是否是系统参数（Y-是，N-否）,  remark text COMMENT 备注,  status tinyint COMMENT 状态（字典 0正常 1停用 2删除）,  group_code text COMMENT 常量所属分类的编码，来自于“常量的分类”字典,  create_time datetime COMMENT 创建时间,  create_user int COMMENT 创建人,  update_time datetime COMMENT 更新时间,  update_user int COMMENT 更新人  ) COMMENT 系统参数配置表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取所有系统级配置参数", "output": "SELECT * FROM sys_config  WHERE sys_flag = 'Y'"}
{"instruction": "CREATE TABLE sys_config (  id int COMMENT 主键,  name text COMMENT 名称,  code text COMMENT 编码,  value text COMMENT 值,  sys_flag text COMMENT 是否是系统参数（Y-是，N-否）,  remark text COMMENT 备注,  status tinyint COMMENT 状态（字典 0正常 1停用 2删除）,  group_code text COMMENT 常量所属分类的编码，来自于“常量的分类”字典,  create_time datetime COMMENT 创建时间,  create_user int COMMENT 创建人,  update_time datetime COMMENT 更新时间,  update_user int COMMENT 更新人  ) COMMENT 系统参数配置表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每个分类下的配置参数数量", "output": "SELECT group_code, COUNT(*) AS config_count FROM sys_config GROUP BY group_code"}
{"instruction": "CREATE TABLE sys_config (  id int COMMENT 主键,  name text COMMENT 名称,  code text COMMENT 编码,  value text COMMENT 值,  sys_flag text COMMENT 是否是系统参数（Y-是，N-否）,  remark text COMMENT 备注,  status tinyint COMMENT 状态（字典 0正常 1停用 2删除）,  group_code text COMMENT 常量所属分类的编码，来自于“常量的分类”字典,  create_time datetime COMMENT 创建时间,  create_user int COMMENT 创建人,  update_time datetime COMMENT 更新时间,  update_user int COMMENT 更新人  ) COMMENT 系统参数配置表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询最近一周创建的参数", "output": "SELECT * FROM sys_config WHERE create_time >= DATE_SUB(NOW(), INTERVAL 1 WEEK)"}
{"instruction": "CREATE TABLE sys_config (  id int COMMENT 主键,  name text COMMENT 名称,  code text COMMENT 编码,  value text COMMENT 值,  sys_flag text COMMENT 是否是系统参数（Y-是，N-否）,  remark text COMMENT 备注,  status tinyint COMMENT 状态（字典 0正常 1停用 2删除）,  group_code text COMMENT 常量所属分类的编码，来自于“常量的分类”字典,  create_time datetime COMMENT 创建时间,  create_user int COMMENT 创建人,  update_time datetime COMMENT 更新时间,  update_user int COMMENT 更新人  ) COMMENT 系统参数配置表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取HTTP_TIMEOUT的配置值", "output": "SELECT value FROM sys_config WHERE code = 'HTTP_TIMEOUT'"}
{"instruction": "CREATE TABLE sys_config (  id int COMMENT 主键,  name text COMMENT 名称,  code text COMMENT 编码,  value text COMMENT 值,  sys_flag text COMMENT 是否是系统参数（Y-是，N-否）,  remark text COMMENT 备注,  status tinyint COMMENT 状态（字典 0正常 1停用 2删除）,  group_code text COMMENT 常量所属分类的编码，来自于“常量的分类”字典,  create_time datetime COMMENT 创建时间,  create_user int COMMENT 创建人,  update_time datetime COMMENT 更新时间,  update_user int COMMENT 更新人  ) COMMENT 系统参数配置表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "最近修改过的5个配置参数", "output": "SELECT * FROM sys_config  ORDER BY update_time DESC  LIMIT 5"}
{"instruction": "CREATE TABLE sys_config (  id int COMMENT 主键,  name text COMMENT 名称,  code text COMMENT 编码,  value text COMMENT 值,  sys_flag text COMMENT 是否是系统参数（Y-是，N-否）,  remark text COMMENT 备注,  status tinyint COMMENT 状态（字典 0正常 1停用 2删除）,  group_code text COMMENT 常量所属分类的编码，来自于“常量的分类”字典,  create_time datetime COMMENT 创建时间,  create_user int COMMENT 创建人,  update_time datetime COMMENT 更新时间,  update_user int COMMENT 更新人  ) COMMENT 系统参数配置表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "2023年度更新过的配置参数", "output": "SELECT * FROM sys_config WHERE update_time BETWEEN '2023-01-01' AND '2023-12-31'"}
{"instruction": "CREATE TABLE sys_config (  id int COMMENT 主键,  name text COMMENT 名称,  code text COMMENT 编码,  value text COMMENT 值,  sys_flag text COMMENT 是否是系统参数（Y-是，N-否）,  remark text COMMENT 备注,  status tinyint COMMENT 状态（字典 0正常 1停用 2删除）,  group_code text COMMENT 常量所属分类的编码，来自于“常量的分类”字典,  create_time datetime COMMENT 创建时间,  create_user int COMMENT 创建人,  update_time datetime COMMENT 更新时间,  update_user int COMMENT 更新人  ) COMMENT 系统参数配置表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "配置参数最早创建时间", "output": "SELECT MIN(create_time) AS first_created FROM sys_config"}
{"instruction": "CREATE TABLE sys_config (  id int COMMENT 主键,  name text COMMENT 名称,  code text COMMENT 编码,  value text COMMENT 值,  sys_flag text COMMENT 是否是系统参数（Y-是，N-否）,  remark text COMMENT 备注,  status tinyint COMMENT 状态（字典 0正常 1停用 2删除）,  group_code text COMMENT 常量所属分类的编码，来自于“常量的分类”字典,  create_time datetime COMMENT 创建时间,  create_user int COMMENT 创建人,  update_time datetime COMMENT 更新时间,  update_user int COMMENT 更新人  ) COMMENT 系统参数配置表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "配置参数最晚创建时间", "output": "SELECT MAX(create_time) AS last_created FROM sys_config"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取系统字典值的所有数据", "output": "SELECT * FROM sys_dict_data"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取系统字典值的所有数据并升序排列", "output": "SELECT * FROM sys_dict_data ORDER BY sort ASC"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取系统字典值的所有数据并降序排列", "output": "SELECT * FROM sys_dict_data ORDER BY sort DESC"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询状态为“正常”或“停用”的字典数据", "output": "SELECT * FROM sys_dict_data  WHERE status IN (0, 1)"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询系统字典表中最近一年创建的数据", "output": "SELECT * FROM sys_dict_data WHERE create_time >= NOW() - INTERVAL 1 YEAR ORDER BY create_time DESC"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取系统字典值表中最近更新的 5 条记录", "output": "SELECT * FROM sys_dict_data  ORDER BY update_time DESC  LIMIT 5"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计系统字典值表中各状态的数据量", "output": "SELECT status, COUNT(*) AS count  FROM sys_dict_data  GROUP BY status"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询系统字典表中所有未标记为“删除”的数据", "output": "SELECT * FROM sys_dict_data  WHERE status != 2"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\nCREATE TABLE sys_dict_type ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典类型表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有正常状态的字典类型及其对应的字典数据项", "output": "SELECT t.code AS type_code, d.value, d.code AS data_code FROM sys_dict_type t JOIN sys_dict_data d ON t.id = d.type_id WHERE t.status = 0 AND d.status = 0 ORDER BY t.sort, d.sort"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\nCREATE TABLE sys_dict_type ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典类型表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每个有效字典类型包含的有效数据项数量", "output": "SELECT t.code, COUNT(d.id) AS data_count FROM sys_dict_type t LEFT JOIN sys_dict_data d ON t.id = d.type_id AND d.status = 0 WHERE t.status = 0 GROUP BY t.code"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\nCREATE TABLE sys_dict_type ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典类型表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "找出包含最多有效数据项的前5个字典类型", "output": "SELECT t.code, COUNT(d.id) AS data_count FROM sys_dict_type t JOIN sys_dict_data d ON t.id = d.type_id WHERE t.status = 0 AND d.status = 0 GROUP BY t.code ORDER BY data_count DESC LIMIT 5"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\nCREATE TABLE sys_dict_type ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典类型表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查找存在但对应字典类型已删除/无效的孤立字典数据", "output": "SELECT d.*  FROM sys_dict_data d LEFT JOIN sys_dict_type t ON d.type_id = t.id WHERE t.status != 0"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "分析字典类型的创建时间分布", "output": "SELECT    DATE(create_time) AS create_date,   COUNT(*) AS type_count FROM sys_dict_type GROUP BY create_date ORDER BY create_date DESC"}
{"instruction": "CREATE TABLE sys_dict_type ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统字典类型表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "检查字典类型编码重复情况", "output": "SELECT code, COUNT(*) AS dup_count FROM sys_dict_type GROUP BY code HAVING COUNT(*) > 1"}
{"instruction": "CREATE TABLE sys_dict_type ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统字典类型表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查看最近更新的10个有效字典类型", "output": "SELECT code, name, update_time, update_user FROM sys_dict_type WHERE status = 0 ORDER BY update_time DESC LIMIT 10"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\nCREATE TABLE sys_dict_type ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典类型表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "发现已停用但仍有有效数据的字典类型", "output": "SELECT t.code, COUNT(d.id) AS active_data FROM sys_dict_type t JOIN sys_dict_data d ON t.id = d.type_id WHERE t.status = 1 AND d.status = 0 GROUP BY t.code"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\nCREATE TABLE sys_dict_type ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典类型表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计最常修改字典数据的用户TOP5", "output": "SELECT    update_user,   COUNT(*) AS update_count FROM (   SELECT update_user FROM sys_dict_type   UNION ALL   SELECT update_user FROM sys_dict_data ) all_updates WHERE update_user IS NOT NULL GROUP BY update_user ORDER BY update_count DESC LIMIT 5"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取系统字典值表最活跃的创建人 TOP5", "output": "SELECT    create_user AS 创建人,    COUNT(*) AS 创建次数  FROM sys_dict_data  GROUP BY create_user  ORDER BY 创建次数 DESC  LIMIT 5"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取系统字典值表最活跃的更新人 TOP5", "output": "SELECT    update_user AS 更新人,    COUNT(*) AS 更新次数  FROM sys_dict_data  GROUP BY update_user  ORDER BY 更新次数 DESC  LIMIT 5"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "列出系统字典值表中重复的编码及其重复次数", "output": "SELECT    code AS 重复编码,    COUNT(*) AS 重复次数  FROM sys_dict_data  GROUP BY code  HAVING 重复次数 > 1"}
{"instruction": "CREATE TABLE sys_dict_data ( id int COMMENT 主键, type_id int COMMENT 字典类型id, value text COMMENT 值, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统字典值表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "列出系统字典值表中所有重复编码的完整记录", "output": "SELECT * FROM sys_dict_data  WHERE code IN (   SELECT code    FROM sys_dict_data    GROUP BY code    HAVING COUNT(*) > 1 )  ORDER BY code"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询\"张三\"用户发布的所有通知标题和发布时间", "output": "SELECT n.title, n.public_time  FROM sys_notice n JOIN sys_user u ON n.public_user_id = u.id WHERE u.name = '张三';"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每个管理员类型用户发布的通知数量（包含0发布量的用户）", "output": "SELECT    u.admin_type,   COUNT(n.id) AS notice_count  FROM sys_user u LEFT JOIN sys_notice n ON u.id = n.public_user_id GROUP BY u.admin_type ORDER BY notice_count DESC;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询状态为（type=2）的公告类通知，显示标题、发布人姓名和机构", "output": "SELECT    n.title,   u.name AS publisher_name,   n.public_org_name  FROM sys_notice n JOIN sys_user u ON n.public_user_id = u.id WHERE n.type = 2    AND n.status = 1;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询最近30天创建且未删除的通知，显示标题、发布人邮箱和手机", "output": "SELECT    n.title,   u.email,   u.phone  FROM sys_notice n JOIN sys_user u ON n.public_user_id = u.id WHERE n.status != 3    AND n.create_time >= CURDATE() - INTERVAL 30 DAY;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询被sys_user.status为(1, 2)用户发布的所有通知ID及状态", "output": "SELECT    n.id AS notice_id,   n.status AS notice_status  FROM sys_notice n JOIN sys_user u ON n.public_user_id = u.id WHERE u.status IN (1, 2); -- 用户状态1冻结 2删除"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每个用户的已读通知数量，显示用户姓名和已读数量", "output": "SELECT    u.name AS user_name,   COUNT(nu.id) AS read_count  FROM sys_user u LEFT JOIN sys_notice_user nu    ON u.id = nu.user_id    AND nu.status = 1  -- 已读状态 GROUP BY u.id, u.name;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询（sys_user.status=1）用户的未读通知总数", "output": "SELECT    SUM(CASE WHEN nu.status = 0 THEN 1 ELSE 0 END) AS total_unread  FROM sys_user u LEFT JOIN sys_notice_user nu    ON u.id = nu.user_id  WHERE u.status = 1;  -- 用户状态为冻结"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "列出最近7天内阅读过通知的用户及其最后阅读时间", "output": "SELECT    u.name AS user_name,   MAX(nu.read_time) AS last_read_time  FROM sys_user u JOIN sys_notice_user nu    ON u.id = nu.user_id  WHERE nu.read_time >= CURDATE() - INTERVAL 7 DAY  GROUP BY u.id, u.name;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计所有用户的已读和未读通知数量（包含无通知的用户）", "output": "SELECT    u.name AS user_name,   SUM(CASE WHEN nu.status = 1 THEN 1 ELSE 0 END) AS read_count,   SUM(CASE WHEN nu.status = 0 THEN 1 ELSE 0 END) AS unread_count  FROM sys_user u LEFT JOIN sys_notice_user nu    ON u.id = nu.user_id  GROUP BY u.id, u.name;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询未读通知数量最多的前5名用户", "output": "SELECT    u.name AS user_name,   COUNT(nu.id) AS unread_count  FROM sys_user u LEFT JOIN sys_notice_user nu    ON u.id = nu.user_id    AND nu.status = 0  -- 未读状态 GROUP BY u.id, u.name  ORDER BY unread_count DESC  LIMIT 5;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每个用户发布的公告类通知（type=2）的已读数量，显示用户姓名和已读数量", "output": "SELECT    u.name AS publisher_name,   COUNT(nu.id) AS read_count  FROM sys_user u JOIN sys_notice n ON u.id = n.public_user_id  LEFT JOIN sys_notice_user nu    ON n.id = nu.notice_id    AND nu.status = 1  -- 已读状态 WHERE n.type = 2     -- 公告类型 GROUP BY u.id, u.name;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有状态（status=1）的通知标题及其未读用户数量", "output": "SELECT    n.title,   COUNT(CASE WHEN nu.status = 0 OR nu.id IS NULL THEN 1 END) AS unread_users  FROM sys_notice n LEFT JOIN sys_notice_user nu ON n.id = nu.notice_id  WHERE n.status = 1   -- 通知已发布 GROUP BY n.id, n.title;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "列出最近一周内发布且被阅读过的通知标题、发布人姓名及阅读次数", "output": "SELECT    n.title,   u.name AS publisher_name,   COUNT(nu.id) AS read_times  FROM sys_notice n JOIN sys_user u ON n.public_user_id = u.id  JOIN sys_notice_user nu ON n.id = nu.notice_id  WHERE n.public_time >= CURDATE() - INTERVAL 7 DAY    AND nu.read_time IS NOT NULL  GROUP BY n.id, n.title, u.name;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询已发布但从未被阅读的通知ID和标题", "output": "SELECT    n.id AS notice_id,   n.title  FROM sys_notice n LEFT JOIN sys_notice_user nu ON n.id = nu.notice_id  WHERE n.status = 1   -- 通知已发布   AND nu.id IS NULL; -- 无阅读记录"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表; \n\nCREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每个用户类型（管理员/非管理员）的已读和未读通知总数", "output": "SELECT    CASE u.admin_type      WHEN 0 THEN '超级管理员'      ELSE '非管理员'    END AS user_type,   SUM(CASE WHEN nu.status = 1 THEN 1 ELSE 0 END) AS read_total,   SUM(CASE WHEN nu.status = 0 THEN 1 ELSE 0 END) AS unread_total  FROM sys_user u LEFT JOIN sys_notice_user nu ON u.id = nu.user_id  GROUP BY u.admin_type;"}
{"instruction": "CREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每个通知的已读用户数和\\未读用户数​", "output": "SELECT    n.title AS 通知标题,   COUNT(CASE WHEN nu.status = 1 THEN 1 END) AS 已读数量,   COUNT(CASE WHEN nu.status = 0 THEN 1 END) AS 未读数量 FROM sys_notice n LEFT JOIN sys_notice_user nu ON n.id = nu.notice_id GROUP BY n.id, n.title;"}
{"instruction": "CREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有 ​​已发布（status=1）但从未被阅读​​ 的通知", "output": "SELECT n.*  FROM sys_notice n LEFT JOIN sys_notice_user nu ON n.id = nu.notice_id WHERE n.status = 1  GROUP BY n.id HAVING COUNT(nu.id) = 0;  -- 无任何阅读记录"}
{"instruction": "CREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "列出 ​​最近30天内发布且被阅读过​​ 的通知标题及其阅读次数", "output": "SELECT    n.title AS 通知标题,   COUNT(nu.id) AS 阅读次数  FROM sys_notice n JOIN sys_notice_user nu ON n.id = nu.notice_id WHERE n.public_time >= CURDATE() - INTERVAL 30 DAY    AND nu.read_time IS NOT NULL  GROUP BY n.id, n.title;"}
{"instruction": "CREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "按通知类型统计 ​​已读率​​（已读数 / 总关联用户数）", "output": "SELECT    CASE n.type      WHEN 1 THEN '通知'      WHEN 2 THEN '公告'    END AS 类型,   ROUND(     SUM(CASE WHEN nu.status = 1 THEN 1 ELSE 0 END) * 100.0 /      COUNT(nu.id), 2   ) AS 已读率 FROM sys_notice n LEFT JOIN sys_notice_user nu ON n.id = nu.notice_id GROUP BY n.type;"}
{"instruction": "CREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\nCREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询 ​​被撤回（status=2）的通知中，用户阅读时间晚于撤回时间​​ 的记录", "output": "SELECT    n.title AS 通知标题,   nu.user_id AS 用户ID,   nu.read_time AS 阅读时间,   n.cancel_time AS 撤回时间  FROM sys_notice n JOIN sys_notice_user nu ON n.id = nu.notice_id WHERE n.status = 2    AND n.cancel_time IS NOT NULL    AND nu.read_time > n.cancel_time;  -- 阅读时间在撤回后"}
{"instruction": "CREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每种状态（status）的通知数量，按数量降序排序", "output": "SELECT    status AS 状态,   COUNT(id) AS 通知数量  FROM sys_notice  GROUP BY status  ORDER BY 通知数量 DESC;"}
{"instruction": "CREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询最近一个月内发布的 ​​公告类通知（type=2）​​ 的标题和发布时间", "output": "SELECT    title AS 标题,   public_time AS 发布时间  FROM sys_notice  WHERE type = 2    AND public_time >= CURDATE() - INTERVAL 1 MONTH;"}
{"instruction": "CREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "列出所有 ​​已撤回（status=2）且撤回时间晚于发布时间​​ 的通知标题、发布时间和撤回时间", "output": "SELECT    title AS 标题,   public_time AS 发布时间,   cancel_time AS 撤回时间  FROM sys_notice  WHERE status = 2    AND cancel_time IS NOT NULL    AND cancel_time > public_time;"}
{"instruction": "CREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每个发布人（public_user_id）发布的通知数量，显示前5名高频发布人", "output": "SELECT    public_user_id AS 发布人ID,   public_user_name AS 发布人姓名,   COUNT(id) AS 通知数量  FROM sys_notice  GROUP BY public_user_id, public_user_name  ORDER BY 通知数量 DESC  LIMIT 5;"}
{"instruction": "CREATE TABLE sys_notice ( id int COMMENT 主键, title text COMMENT 标题, content text COMMENT 内容, type tinyint COMMENT 类型（字典 1通知 2公告）, public_user_id int COMMENT 发布人id, public_user_name text COMMENT 发布人姓名, public_org_id int COMMENT 发布机构id, public_org_name text COMMENT 发布机构名称, public_time datetime COMMENT 发布时间, cancel_time datetime COMMENT 撤回时间, status tinyint COMMENT 状态（字典 0草稿 1发布 2撤回 3删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改人 ) COMMENT 通知表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询状态为“发布”（status=1）但 ​​从未被撤回​​（无撤回时间）的通知", "output": "SELECT    title AS 标题,   public_time AS 发布时间  FROM sys_notice  WHERE status = 1    AND cancel_time IS NULL;"}
{"instruction": "CREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每个用户的 ​​已读通知数量​​ 和 ​​未读通知数量​", "output": "SELECT    user_id AS 用户ID,   SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) AS 已读数量,   SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) AS 未读数量 FROM sys_notice_user GROUP BY user_id;"}
{"instruction": "CREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询 ​​阅读次数最多的通知ID​​ 及其阅读次数", "output": "SELECT    notice_id AS 通知ID,   COUNT(*) AS 阅读次数  FROM sys_notice_user WHERE status = 1  -- 已读状态 GROUP BY notice_id ORDER BY 阅读次数 DESC LIMIT 1;          -- 取最高值"}
{"instruction": "CREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "列出 ​​最近一周内有阅读记录​​ 的用户ID及其最后阅读时间", "output": "SELECT    user_id AS 用户ID,   MAX(read_time) AS 最后阅读时间  FROM sys_notice_user WHERE read_time >= DATE_SUB(NOW(), INTERVAL 7 DAY)  -- 动态计算最近7天 GROUP BY user_id;"}
{"instruction": "CREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计每个通知的 ​​已读用户总数​​ 和 ​​未读用户总数​", "output": "SELECT    notice_id AS 通知ID,   SUM(status = 1) AS 已读用户数,  -- 直接利用布尔值统计   SUM(status = 0) AS 未读用户数 FROM sys_notice_user GROUP BY notice_id;"}
{"instruction": "CREATE TABLE sys_notice_user ( id int COMMENT 主键, notice_id int COMMENT 通知公告id, user_id int COMMENT 用户id, status tinyint COMMENT 状态（字典 0未读 1已读）, read_time datetime COMMENT 阅读时间 ) COMMENT 通知阅读状态表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询 ​​从未被阅读过​​ 的通知ID（状态全为未读）", "output": "SELECT    notice_id AS 未读通知ID FROM sys_notice_user GROUP BY notice_id HAVING SUM(status = 1) = 0;  -- 确保没有已读记录"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有短信", "output": "select b.name,a.* from sys_sms a,sys_user b where b.phone(+)=a.phone_numbers"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询每个人未发送的短信条数", "output": "select b.name,count(a.id) from sys_sms a,sys_user b where b.phone=a.phone_numbers(+) and a.status='0' group by b.name"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询每个人发送成功的短信条数", "output": "select b.name,count(a.id) from sys_sms a,sys_user b where b.phone=a.phone_numbers(+) and a.status='1' group by b.name"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询每个人发送失败的短信条数", "output": "select b.name,count(a.id) from sys_sms a,sys_user b where b.phone=a.phone_numbers(+) and a.status='2' group by b.name"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询每个人失效的短信条数", "output": "select b.name,count(a.id) from sys_sms a,sys_user b where b.phone=a.phone_numbers(+) and a.status='3' group by b.name"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询冻结用户最近7天的短信记录", "output": "SELECT s.*  FROM sys_sms s JOIN sys_user u ON s.phone_numbers = u.phone WHERE u.status = 1    AND s.create_time >= DATE_SUB(NOW(), INTERVAL 7 DAY);"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询过去1小时创建的未处理短信", "output": "SELECT *  FROM sys_sms  WHERE status = 0    AND create_time >= DATE_SUB(NOW(), INTERVAL 1 HOUR)   AND invalid_time > NOW();"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有未发送且未失效的短信", "output": "SELECT phone_numbers, validate_code, template_code  FROM sys_sms  WHERE status = 0    AND invalid_time > NOW();"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计不同来源的短信发送成功率", "output": "SELECT    source,   COUNT(*) AS total,   SUM(CASE WHEN status = 1 THEN 1 ELSE 0 END) / COUNT(*) * 100 AS success_rate FROM sys_sms GROUP BY source;"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询短信发送手机号", "output": "select phone_numbers from sys_sms"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询短信发送来源", "output": "select source from sys_sms"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询短信发送失效时间", "output": "select invalid_time from sys_sms"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询短信发送创建时间", "output": "select create_time from sys_sms"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询短信发送创建人", "output": "select create_user from sys_sms"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询短信发送更新时间", "output": "select update_time from sys_sms"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询短信发送更新人", "output": "select update_user from sys_sms"}
{"instruction": "CREATE TABLE sys_sms ( id int COMMENT 主键, phone_numbers text COMMENT 手机号, validate_code text COMMENT 短信验证码, template_code text COMMENT 短信模板ID, biz_id text COMMENT 回执id，可根据该id查询具体的发送状态, status tinyint COMMENT 发送状态（字典 0 未发送，1 发送成功，2 发送失败，3 失效）, source tinyint COMMENT 来源（字典 1 app， 2 pc， 3 其他）, invalid_time datetime COMMENT 失效时间, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 短信信息发送表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询短信发送发送状态", "output": "select status from sys_sms"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地） file_bucket text COMMENT 文件仓库 file_origin_name text COMMENT 文件名称（上传时候的文件名） file_suffix text COMMENT 文件后缀 file_size_kb int COMMENT 文件大小kb file_size_info text COMMENT 文件大小信息，计算后的 file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id） file_path text COMMENT 存储路径 create_time datetime COMMENT 创建时间 create_user int COMMENT 创建用户 update_time datetime COMMENT 修改时间 update_user int COMMENT 修改用户 ) COMMENT 文件信息表\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有文件信息", "output": "select * from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件存储位置", "output": "select file_location from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件仓库", "output": "select file_bucket from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件名称（上传时候的文件名）", "output": "select file_origin_name from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件后缀", "output": "select file_suffix from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件大小kb", "output": "select file_size_kb from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件大小信息，计算后的", "output": "select file_size_info from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询存储到bucket的名称（文件唯一标识id）", "output": "select file_object_name from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询存储路径", "output": "select file_path from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件创建时间", "output": "select create_time from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件创建用户", "output": "select b.name from sys_file_info a,sys_user b where a.create_user=b.id(+)"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件更新时间", "output": "select update_time from sys_file_info"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件更新人", "output": "select b.name from sys_file_info a,sys_user b where a.update_user=b.id(+)"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询用户基本信息及其头像文件路径（通过 avatar 关联）", "output": "SELECT    u.id,    u.name,    u.account,   f.file_path AS avatar_url FROM sys_user u LEFT JOIN sys_file_info f ON u.avatar = f.id WHERE u.status = 0;  -- 仅查询正常状态用户"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计不同存储位置的文件数量", "output": "SELECT    CASE file_location      WHEN 1 THEN '阿里云'      WHEN 2 THEN '腾讯云'      WHEN 3 THEN 'MinIO'      WHEN 4 THEN '本地'    END AS storage_name,   COUNT(*) AS total_files FROM sys_file_info GROUP BY file_location;"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询冻结用户的头像文件路径及用户信息", "output": "SELECT    u.name,    u.phone,   f.file_path AS avatar_url FROM sys_user u LEFT JOIN sys_file_info f ON u.avatar = f.id WHERE u.status = 1;  -- 状态为冻结的用户"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "按文件后缀统计文件数量（过滤空后缀）", "output": "SELECT    IFNULL(file_suffix, '未知') AS suffix_type,   COUNT(*) AS total FROM sys_file_info GROUP BY file_suffix HAVING suffix_type != '';"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查找文件大小超过 10MB 的文件（需转换单位）", "output": "SELECT    file_origin_name,   file_suffix,   file_size_kb / 1024 AS file_size_mb FROM sys_file_info WHERE file_size_kb > 10240;  -- 10MB = 10240KB"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件信息表的所有文件信息", "output": "SELECT * FROM sys_file_info  ORDER BY create_time DESC"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询ID为“1”的文件信息", "output": "SELECT * FROM sys_file_info  WHERE id = 1;"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询不同存储位置下的文件数量", "output": "SELECT      file_location AS 存储位置,     COUNT(*) AS 文件数量 FROM sys_file_info  GROUP BY file_location;"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询不同文件后缀的数量和总大小", "output": "SELECT      file_suffix AS 文件后缀,     COUNT(*) AS 数量,     SUM(file_size_kb) AS 总大小_KB FROM sys_file_info  GROUP BY file_suffix;"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件信息表中文件总的文件信息，包含总文件数，总大小", "output": "SELECT      COUNT(*) AS 总文件数,     SUM(file_size_kb) AS 总大小_KB,     CONCAT(ROUND(SUM(file_size_kb)/1024, 2), 'MB') AS 总大小_MB FROM sys_file_info;"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询存储位置为“阿里云”下的文件", "output": "SELECT * FROM sys_file_info  WHERE file_location = 1; -- 1表示阿里云"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询文件名包含“report”的文件", "output": "SELECT * FROM sys_file_info  WHERE file_origin_name LIKE '%report%';"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询大于 1MB 的文件", "output": "SELECT * FROM sys_file_info  WHERE file_size_kb > 1024; -- 1MB = 1024KB"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "按时间范围查询（最近7天）", "output": "SELECT * FROM sys_file_info  WHERE create_time >= DATE_SUB(NOW(), INTERVAL 7 DAY);"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询用户id为 8470创建的文件", "output": "SELECT * FROM sys_file_info  WHERE create_user = 8470;"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询用户 张三创建的文件", "output": "SELECT * FROM sys_file_info fi, sys_user u WHERE u.id = fi.create_user ;"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询最近修改的文件（按修改时间排序）", "output": "SELECT * FROM sys_file_info  ORDER BY update_time DESC  LIMIT 10;"}
{"instruction": "CREATE TABLE sys_file_info ( id int COMMENT 主键id, file_location tinyint COMMENT 文件存储位置（1:阿里云，2:腾讯云，3:minio，4:本地）, file_bucket text COMMENT 文件仓库, file_origin_name text COMMENT 文件名称（上传时候的文件名）, file_suffix text COMMENT 文件后缀, file_size_kb int COMMENT 文件大小kb, file_size_info text COMMENT 文件大小信息，计算后的, file_object_name text COMMENT 存储到bucket的名称（文件唯一标识id）, file_path text COMMENT 存储路径, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建用户, update_time datetime COMMENT 修改时间, update_user int COMMENT 修改用户 ) COMMENT 文件信息表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "检查重复文件（按存储名称去重）", "output": "SELECT      file_object_name,     COUNT(*) AS duplicate_count FROM sys_file_info  GROUP BY file_object_name  HAVING COUNT(*) > 1;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有状态为冻结的用户账号和昵称", "output": "SELECT account, nick_name FROM sys_user WHERE status = 1;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询创建时间在2023年的用户姓名和邮箱", "output": "SELECT name, email FROM sys_user WHERE create_time BETWEEN '2023-01-01' AND '2023-12-31';"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有男性用户的姓名和电话", "output": "SELECT name, phone FROM sys_user WHERE sex = 1;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有正常状态用户并按创建时间倒序排列", "output": "SELECT * FROM sys_user WHERE status = 0 ORDER BY create_time DESC;"}
{"instruction": "CREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询工号为'E1001'的员工所属机构ID和名称", "output": "SELECT org_id, org_name FROM sys_emp WHERE job_num = 'E1001';"}
{"instruction": "CREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所属机构ID为100的所有员工工号", "output": "SELECT job_num FROM sys_emp WHERE org_id = 100;"}
{"instruction": "CREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有员工工号并按工号升序排列", "output": "SELECT job_num FROM sys_emp ORDER BY job_num ASC;"}
{"instruction": "CREATE TABLE sys_emp_ext_org_pos ( id int COMMENT 主键, emp_id int COMMENT 员工id, org_id int COMMENT 机构id, pos_id int COMMENT 岗位id ) COMMENT 员工附属机构岗位表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询员工ID为1的所有附属机构ID和岗位ID", "output": "SELECT org_id, pos_id FROM sys_emp_ext_org_pos WHERE emp_id = 1;"}
{"instruction": "CREATE TABLE sys_emp_ext_org_pos ( id int COMMENT 主键, emp_id int COMMENT 员工id, org_id int COMMENT 机构id, pos_id int COMMENT 岗位id ) COMMENT 员工附属机构岗位表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询岗位ID为5的所有附属机构记录", "output": "SELECT * FROM sys_emp_ext_org_pos WHERE pos_id = 5;"}
{"instruction": "CREATE TABLE sys_org ( id int COMMENT 主键, pid int COMMENT 父id, pids text COMMENT 父ids, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 描述, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统组织机构表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询状态为停用的机构名称和编码", "output": "SELECT name, code FROM sys_org WHERE status = 1;"}
{"instruction": "CREATE TABLE sys_org ( id int COMMENT 主键, pid int COMMENT 父id, pids text COMMENT 父ids, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 描述, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统组织机构表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询父ID为0的所有机构并按排序升序排列", "output": "SELECT * FROM sys_org WHERE pid = 0 ORDER BY sort ASC;"}
{"instruction": "CREATE TABLE sys_pos ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统职位表; \n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询状态为正常的职位名称和备注", "output": "SELECT name, remark FROM sys_pos WHERE status = 0;"}
{"instruction": "CREATE TABLE sys_pos ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统职位表; \n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询编码以'DEV'开头的所有职位", "output": "SELECT * FROM sys_pos WHERE code LIKE 'DEV%';"}
{"instruction": "CREATE TABLE sys_pos ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统职位表; \n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有职位并按创建时间倒序排列", "output": "SELECT * FROM sys_pos ORDER BY create_time DESC;"}
{"instruction": "CREATE TABLE sys_pos ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统职位表; \n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询创建人为用户ID 1的职位名称和创建时间", "output": "SELECT name, create_time FROM sys_pos WHERE create_user = 1;"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\nCREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询用户基本信息及其所属机构名称", "output": "SELECT u.account,u.name,e.org_name FROM sys_user u LEFT JOIN sys_emp e ON u.id = e.id"}
{"instruction": "CREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\nCREATE TABLE sys_org ( id int COMMENT 主键, pid int COMMENT 父id, pids text COMMENT 父ids, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 描述, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统组织机构表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询所有停用机构下的员工", "output": "SELECT e.* FROM sys_emp e INNER JOIN sys_org o ON e.org_id = o.id WHERE o.status = 1"}
{"instruction": "CREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\nCREATE TABLE sys_emp_ext_org_pos ( id int COMMENT 主键, emp_id int COMMENT 员工id, org_id int COMMENT 机构id, pos_id int COMMENT 岗位id ) COMMENT 员工附属机构岗位表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取员工工号及其附属岗位ID", "output": "SELECT e.job_num, p.pos_id FROM sys_emp e INNER JOIN sys_emp_ext_org_pos p ON e.id = p.emp_id"}
{"instruction": "CREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\nCREATE TABLE sys_org ( id int COMMENT 主键, pid int COMMENT 父id, pids text COMMENT 父ids, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 描述, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统组织机构表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计各机构员工数量", "output": "SELECT o.name, COUNT(e.id) FROM sys_org o LEFT JOIN sys_emp e ON o.id = e.org_id GROUP BY o.name"}
{"instruction": "CREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询有多个岗位的员工", "output": "SELECT u.name,e.emp_id, COUNT(e.pos_id) FROM sys_emp_ext_org_pos e left join sys_user u on e.emp_id=u.emp_id GROUP BY e.emp_id HAVING COUNT(e.pos_id) > 1"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\nCREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\nCREATE TABLE sys_emp_ext_org_pos ( id int COMMENT 主键, emp_id int COMMENT 员工id, org_id int COMMENT 机构id, pos_id int COMMENT 岗位id ) COMMENT 员工附属机构岗位表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取用户姓名+主机构+附属岗位", "output": "SELECT u.name, e.org_name, p.pos_id FROM sys_user u JOIN sys_emp e ON u.emp_id = e.id JOIN sys_emp_ext_org_pos p ON e.id = p.emp_id"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\nCREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\nCREATE TABLE sys_org ( id int COMMENT 主键, pid int COMMENT 父id, pids text COMMENT 父ids, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 描述, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统组织机构表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询用户所属机构及其上级机构", "output": "SELECT u.name, o.name AS org, parent.name AS parent_org FROM sys_user u JOIN sys_emp e ON u.emp_id = e.id JOIN sys_org o ON e.org_id = o.id LEFT JOIN sys_org parent ON o.pid = parent.id"}
{"instruction": "CREATE TABLE sys_emp_ext_org_pos ( id int COMMENT 主键, emp_id int COMMENT 员工id, org_id int COMMENT 机构id, pos_id int COMMENT 岗位id ) COMMENT 员工附属机构岗位表;\n\nCREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计各岗位员工数量", "output": "SELECT p.name, COUNT(*) FROM sys_pos p JOIN sys_emp_ext_org_pos epos ON p.id = epos.pos_id JOIN sys_emp e ON epos.emp_id = e.id GROUP BY p.name"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\nCREATE TABLE sys_emp_ext_org_pos ( id int COMMENT 主键, emp_id int COMMENT 员工id, org_id int COMMENT 机构id, pos_id int COMMENT 岗位id ) COMMENT 员工附属机构岗位表;\n\nCREATE TABLE sys_pos ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统职位表; \n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询管理员用户的岗位分布", "output": "SELECT p.name, COUNT(*) FROM sys_user u JOIN sys_emp_ext_org_pos eop ON u.emp_id = eop.emp_id JOIN sys_pos p ON eop.pos_id = p.id WHERE u.admin_type = 0 GROUP BY p.name"}
{"instruction": "CREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\nCREATE TABLE sys_emp ( id int COMMENT 主键, job_num text COMMENT 工号, org_id int COMMENT 所属机构id, org_name text COMMENT 所属机构名称 ) COMMENT 员工表;\n\nCREATE TABLE sys_emp_ext_org_pos ( id int COMMENT 主键, emp_id int COMMENT 员工id, org_id int COMMENT 机构id, pos_id int COMMENT 岗位id ) COMMENT 员工附属机构岗位表;\n\nCREATE TABLE sys_pos (\nid int COMMENT 主键\nname text COMMENT 名称\ncode text COMMENT 编码\nsort int COMMENT 排序\nremark text COMMENT 备注\nstatus tinyint COMMENT 状态（字典 0正常 1停用 2删除）\ncreate_time datetime COMMENT 创建时间\ncreate_user int COMMENT 创建人\nupdate_time datetime COMMENT 更新时间\nupdate_user int COMMENT 更新人\n) COMMENT 系统职位表\n\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "获取用户手机号+工号+主岗位", "output": "SELECT u.phone, e.job_num, p.name FROM sys_user u JOIN sys_emp e ON u.emp_id = e.id JOIN sys_emp_ext_org_pos eop ON e.id = eop.emp_id JOIN sys_pos p ON eop.pos_id = p.id WHERE eop.org_id = e.org_id"}
{"instruction": "CREATE TABLE sys_org ( id int COMMENT 主键, pid int COMMENT 父id, pids text COMMENT 父ids, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 描述, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统组织机构表;\n\nCREATE TABLE sys_emp_ext_org_pos ( id int COMMENT 主键, emp_id int COMMENT 员工id, org_id int COMMENT 机构id, pos_id int COMMENT 岗位id ) COMMENT 员工附属机构岗位表;\n\nCREATE TABLE sys_pos ( id int COMMENT 主键, name text COMMENT 名称, code text COMMENT 编码, sort int COMMENT 排序, remark text COMMENT 备注, status tinyint COMMENT 状态（字典 0正常 1停用 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人 ) COMMENT 系统职位表; \n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计各部门各岗位编制", "output": "SELECT o.name AS org, p.name AS position, COUNT(*) AS num FROM sys_org o JOIN sys_emp_ext_org_pos eop ON o.id = eop.org_id JOIN sys_pos p ON eop.pos_id = p.id JOIN sys_emp e ON eop.emp_id = e.id GROUP BY o.name, p.name ORDER BY o.name, p.name"}
{"instruction": "CREATE TABLE sys_vis_log ( id int COMMENT 主键, name text COMMENT 名称, success text COMMENT 是否执行成功（Y-是，N-否）, message text COMMENT 具体消息, ip text COMMENT ip, location text COMMENT 地址, browser text COMMENT 浏览器, os text COMMENT 操作系统, vis_type tinyint COMMENT 操作类型（字典 1登入 2登出）, vis_time datetime COMMENT 访问时间, account text COMMENT 访问账号 ) COMMENT 系统访问日志表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询表sys_vis_log全部数据并按按访问时间降序 ", "output": "SELECT      id,     NAME,     success,     message,     ip,     location,     browser,     os,     vis_type,     vis_time,     ACCOUNT FROM      sys_vis_log ORDER BY      vis_time DESC;"}
{"instruction": "CREATE TABLE sys_vis_log ( id int COMMENT 主键, name text COMMENT 名称, success text COMMENT 是否执行成功（Y-是，N-否）, message text COMMENT 具体消息, ip text COMMENT ip, location text COMMENT 地址, browser text COMMENT 浏览器, os text COMMENT 操作系统, vis_type tinyint COMMENT 操作类型（字典 1登入 2登出）, vis_time datetime COMMENT 访问时间, account text COMMENT 访问账号 ) COMMENT 系统访问日志表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询账号admin的访问日志按时间倒序", "output": " SELECT      id, NAME, success, message, ip, location,     browser, os, vis_type, vis_time, ACCOUNT FROM      sys_vis_log WHERE      ACCOUNT = 'admin' ORDER BY      vis_time DESC;"}
{"instruction": "CREATE TABLE sys_vis_log ( id int COMMENT 主键, name text COMMENT 名称, success text COMMENT 是否执行成功（Y-是，N-否）, message text COMMENT 具体消息, ip text COMMENT ip, location text COMMENT 地址, browser text COMMENT 浏览器, os text COMMENT 操作系统, vis_type tinyint COMMENT 操作类型（字典 1登入 2登出）, vis_time datetime COMMENT 访问时间, account text COMMENT 访问账号 ) COMMENT 系统访问日志表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询账号zhangsan最新的访问日志", "output": "SELECT      v.* FROM      sys_vis_log v WHERE      v.ACCOUNT = 'zhangsan'  ORDER BY      v.vis_time DESC LIMIT 1;"}
{"instruction": "CREATE TABLE sys_vis_log ( id int COMMENT 主键, name text COMMENT 名称, success text COMMENT 是否执行成功（Y-是，N-否）, message text COMMENT 具体消息, ip text COMMENT ip, location text COMMENT 地址, browser text COMMENT 浏览器, os text COMMENT 操作系统, vis_type tinyint COMMENT 操作类型（字典 1登入 2登出）, vis_time datetime COMMENT 访问时间, account text COMMENT 访问账号 ) COMMENT 系统访问日志表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询账号zhangsan登出记录及用户信息", "output": "SELECT      v.*,     u.name AS user_name,     u.phone,     u.email FROM      sys_vis_log v JOIN      sys_user u ON v.ACCOUNT = u.account WHERE      v.ACCOUNT = 'zhangsan'     AND v.vis_type = 2 ORDER BY      v.vis_time DESC;"}
{"instruction": "CREATE TABLE sys_vis_log ( id int COMMENT 主键, name text COMMENT 名称, success text COMMENT 是否执行成功（Y-是，N-否）, message text COMMENT 具体消息, ip text COMMENT ip, location text COMMENT 地址, browser text COMMENT 浏览器, os text COMMENT 操作系统, vis_type tinyint COMMENT 操作类型（字典 1登入 2登出）, vis_time datetime COMMENT 访问时间, account text COMMENT 访问账号 ) COMMENT 系统访问日志表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "统计账户登入次数，并显示姓名", "output": "SELECT      v.ACCOUNT,     u.name AS user_name,     COUNT(*) AS login_count,     MAX(v.vis_time) AS last_login_time FROM      sys_vis_log v JOIN      sys_user u ON v.ACCOUNT = u.account WHERE      v.vis_type = 1 GROUP BY      v.ACCOUNT, u.name ORDER BY      login_count DESC;"}
{"instruction": "CREATE TABLE sys_op_log ( id int COMMENT 主键, name text COMMENT 名称, op_type tinyint COMMENT 操作类型, success text COMMENT 是否执行成功（Y-是，N-否）, message text COMMENT 具体消息, ip text COMMENT ip, location text COMMENT 地址, browser text COMMENT 浏览器, os text COMMENT 操作系统, url text COMMENT 请求地址, class_name text COMMENT 类名称, method_name text COMMENT 方法名称, req_method text COMMENT 请求方式（GET POST PUT DELETE), param text COMMENT 请求参数, result longtext COMMENT 返回结果, op_time datetime COMMENT 操作时间, account text COMMENT 操作账号 ) COMMENT 系统操作日志表;\n\nCREATE TABLE sys_user ( id int COMMENT 主键, account text COMMENT 账号, password text COMMENT 密码, nick_name text COMMENT 昵称, name text COMMENT 姓名, emp_id int COMMENT 员工ID, birthday date COMMENT 生日, sex tinyint COMMENT 性别(字典 1男 2女 3未知), email text COMMENT 邮箱, phone text COMMENT 手机, tel text COMMENT 电话, last_login_ip text COMMENT 最后登陆IP, last_login_time datetime COMMENT 最后登陆时间, admin_type tinyint COMMENT 管理员类型（0超级管理员 1非管理员）, status tinyint COMMENT 状态（字典 0正常 1冻结 2删除）, create_time datetime COMMENT 创建时间, create_user int COMMENT 创建人, update_time datetime COMMENT 更新时间, update_user int COMMENT 更新人, ) COMMENT 系统用户表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "根据用户谢鹏查询操作日志", "output": "SELECT      log.id,     log.name AS operation_name,     log.op_type,     log.success,     log.op_time,     log.ip,     log.location,     user.name AS user_name,     user.account,     user.phone FROM      sys_op_log LOG JOIN      sys_user USER ON log.account = user.account WHERE      user.name = '谢鹏' ORDER BY      log.op_time DESC;"}
{"instruction": "CREATE TABLE sys_op_log ( id int COMMENT 主键, name text COMMENT 名称, op_type tinyint COMMENT 操作类型, success text COMMENT 是否执行成功（Y-是，N-否）, message text COMMENT 具体消息, ip text COMMENT ip, location text COMMENT 地址, browser text COMMENT 浏览器, os text COMMENT 操作系统, url text COMMENT 请求地址, class_name text COMMENT 类名称, method_name text COMMENT 方法名称, req_method text COMMENT 请求方式（GET POST PUT DELETE), param text COMMENT 请求参数, result longtext COMMENT 返回结果, op_time datetime COMMENT 操作时间, account text COMMENT 操作账号 ) COMMENT 系统操作日志表;\n\n", "system": "你是一位公司数据库专家，对公司数据表很熟悉，能够快速准确的根据问题写出对应SQL", "input": "查询谢鹏账号操作日志", "output": "    SELECT *FROM sys_op_log WHERE account= \"谢鹏\";"}
